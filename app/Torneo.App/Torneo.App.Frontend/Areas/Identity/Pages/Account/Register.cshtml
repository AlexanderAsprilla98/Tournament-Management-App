@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1> <div class="row">
    <div class="col-md-6 offset-md-3">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="needs-validation" novalidate>
            <h2>Create a new account</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Input.Email" class="form-label"></label>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" required />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Password" class="form-label"></label>
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" required />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" required />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <button id="registerSubmit" type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
 </div>

<div class="row mt-3">
    <div class="col-md-6 offset-md-3">
        <section>
            <h3>Or use another service to register</h3>
            <hr />
            @if ((Model.ExternalLogins?.Count ?? 0) > 0)
            {
                <div>
                    <p>
                        @foreach (var provider in Model.ExternalLogins)
                        {
                            <button type="button" class="btn btn-primary me-2" onclick="location.href='@Url.Page("./ExternalLogin", new { provider = provider.Name, ReturnUrl = Model.ReturnUrl })'">
                                <i class="fab fa-@provider.Name"></i> @provider.DisplayName
                            </button>
                        }
                    </p>
                </div>
            }
            else
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                        about setting up this ASP.NET application to support logging in via external services</a>.
                    </p>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Example of adding Bootstrap validation styles
        (function () {
            'use strict'
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}
