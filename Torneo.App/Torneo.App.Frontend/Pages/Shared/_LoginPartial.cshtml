@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-light list-group-item list-group-item-action active" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <div>
        <li class="nav-item" style="padding-left: 30px">
            <a class="nav-link text-light list-group-item list-group-item-action active" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
    </div>
    <br></br>
    <div>
        <li class="nav-item" style="padding-left: 30px">
            <a class="nav-link text-light list-group-item list-group-item-action active" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    </div>
}
</ul>
