// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Torneo.App.Persistencia;

#nullable disable

namespace Torneo.App.Persistencia.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241227105611_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Torneo.App.Dominio.DirectorTecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DirectoresTecnicos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DirectorTecnicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorTecnicoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PosicionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.HasIndex("PosicionId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarcadorLocal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarcadorVisitante")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VisitanteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("VisitanteId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Posicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Equipo", b =>
                {
                    b.HasOne("Torneo.App.Dominio.DirectorTecnico", "DirectorTecnico")
                        .WithMany("Equipos")
                        .HasForeignKey("DirectorTecnicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Torneo.App.Dominio.Municipio", "Municipio")
                        .WithMany("Equipos")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DirectorTecnico");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Jugador", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Torneo.App.Dominio.Posicion", "Posicion")
                        .WithMany("Jugadores")
                        .HasForeignKey("PosicionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Equipo");

                    b.Navigation("Posicion");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Partido", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Equipo", "Local")
                        .WithMany("PartidosLocal")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Torneo.App.Dominio.Equipo", "Visitante")
                        .WithMany("PartidosVisitante")
                        .HasForeignKey("VisitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Local");

                    b.Navigation("Visitante");
                });

            modelBuilder.Entity("Torneo.App.Dominio.DirectorTecnico", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Equipo", b =>
                {
                    b.Navigation("Jugadores");

                    b.Navigation("PartidosLocal");

                    b.Navigation("PartidosVisitante");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Municipio", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Posicion", b =>
                {
                    b.Navigation("Jugadores");
                });
#pragma warning restore 612, 618
        }
    }
}
