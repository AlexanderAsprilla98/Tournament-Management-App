@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hola, @(UserManager.GetUserName(User)?.Split('@')[0])!
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-light" id="logout">
                    <i class="fas fa-sign-out-alt me-1"></i>Salir
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light text-decoration-none" id="register" asp-area="Identity" asp-page="/Account/Register">
                <i class="fas fa-user-plus me-1"></i>Registrarse
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light text-decoration-none" id="login" asp-area="Identity" asp-page="/Account/Login">
                <i class="fas fa-sign-in-alt me-1"></i>Ingresar
            </a>
        </li>
    }
</ul>
